version: '3.8'



x-DbLoggin:
  environment:
    &postgres-login
    # the posgress user master password
    POSTGRES_PASSWORD: "${POSTGRES_MASTER_PASSWORD}"

    USER_USERNAME: "${POSGRESS_USER_USERNAME}"
    USER_DB_NAME: "${POSGRESS_USER_DB}"
    USER_PASSWORD: "${POSGRESS_USER_PASSWORD}"

    SQLURL: "jdbc:postgresql://${POSTGRES_IP}:5432/${POSGRESS_USER_USERNAME}"
  networks:
    &postgres-ip
    ipv4_address: "${POSTGRES_IP}"


services:
  postgres_db:
    image: postgres


    environment:
      << : *postgres-login
      PGDATA: "/var/lib/postgresql/data/pgdata"

    networks:
      local_network: *postgres-ip


    ports:
      - "5432:5432"

    volumes:
      - type: volume
        source: postgres_db
        target: /var/lib/postgresql/data

      - type: bind
        source: ./docker_files/db_init
        target: /docker-entrypoint-initdb.d



    restart: unless-stopped



  web_server:

    build:
      context: ./web/api
      dockerfile: ./Dockerfile

    environment:
      <<: *postgres-login

    volumes:
      - type: volume
        source: fractal_thumbnail_images
        target: /fractal_thumbnail_images
      - type: bind
        source: $PWD/web/api/
        target: /usr/src/app


    networks:
      internal:
        ipv4_address: "${WEBSERVER_IP}"


#    ports:
#      - "80:80"
#      - "48:48"

#    depends_on:
#      - postgres_db

    restart: unless-stopped

  server:

    build:
      context: ./server
      dockerfile: Dockerfile


    environment:
      <<: *postgres-login


    volumes:
      - type: volume
        source: fractal_thumbnail_images
        target: /fractal_thumbnail_images


    networks:
      internal:
      frontend:

    depends_on:
      - postgres_db

    restart: unless-stopped



  # https://github.com/mikael2/payara-postgres-nginx/
#  nginx:
#    container_name: nginx
#
#    build:
#      context: ./DockerFiles/nginx_certbot
#      dockerfile: Dockerfile
#
#    volumes:
#      - type: volume
#        source: nginx_data
#        target: /etc/letsencrypt
#
#    env_file:
#      - ./config_files/nginx_cerbot.env
#
#    environment:
#      DOMAIN: "${API_DOMAIN}"
#      LE_EMAIL: "${MAIL_USERNAME}"
#    logging:
#      options:
#        max-size: "50m"
#        max-file: "3"
#
#    ports:
#      - "80:80"
#      - "443:443"
#
#    networks:
#      frontend:
#      internal:
#
#    depends_on:
#      - api_server
#
#    restart: unless-stopped


networks:
  local_network:
    external: false
    ipam:
      driver: default
      config:
        - subnet: 10.0.0.0/8


  frontend:

volumes:
  # posgres db
  postgres_db:

  # thumbnail images
  fractal_thumbnail_images:

  nginx_data:
